---
- name: Deploy code on machine and configure cron and services
  hosts: default
  become: true
  tasks:
    - name: Create minute cron dir
      file:
        path: /etc/cron.minute
        state: directory
        mode: '0755'
    - name: Add minute crontab
      cron:
        cron_file: /etc/crontab
        user: root
        name: minute crontab
        job: "cd / && run-parts --report /etc/cron.minute"
    - name: Copy packages from S3
      become_user: deployer
      command: "aws s3 cp s3://permanent-repos/{{ perm_env }}/{{ item }}.tar.gz /data/tmp/{{ item }}.tar.gz"
      loop:
        - api
        - daemon
        - library
        - mdot
        - task-runner
        - upload-service
        - website
        - notification-service
    - name: Untar packages
      unarchive:
         src: "/data/tmp/{{ item }}.tar.gz"
         dest: /data/www/
         remote_src: yes
      loop:
        - api
        - daemon
        - library
        - mdot
        - task-runner
        - upload-service
        - website
        - notification-service
    - name: Install upload-service dependencies
      community.general.npm:
        path: /data/www/upload-service
        production: yes
    - name: Install notification-service dependencies
      community.general.npm:
        path: /data/www/notification-service
        production: yes
    - name: Change file permissions
      file:
        path: /data/www
        state: directory
        recurse: yes
        owner: www-data
        group: deployer
    - name: Run database migrations
      command: "php migrate.php"
      become_user: deployer
      args:
        chdir: /data/www/library
    - name: Create cronjobs
      copy:
        src: "/data/www/task-runner/scripts/{{ item }}"
        dest: "/etc/cron.{{ item }}"
        owner: www-data
        group: deployer
        mode: "0744"
        remote_src: yes
      loop:
        - minute/disk-check
        - hourly/resubmit-unprocessed-records
        - hourly/system-check
    - name: Create daemon service files
      copy:
        src: "/data/www/daemon/scripts/{{ item }}"
        dest: "/etc/systemd/system/{{ item }}"
        owner: www-data
        group: deployer
        mode: "0644"
        remote_src: yes
      loop:
        - process-daemon.service
        - sqs-daemon.service
    - name: Enable and stop all services
      service:
        name: "{{ item }}"
        enabled: yes
        state: stopped
      loop:
        - process-daemon.service
        - sqs-daemon.service
        - upload.service
        - notification.service
    - name: Start all services
      service:
        name: "{{ item }}"
        enabled: yes
        state: started
      loop:
        - process-daemon.service
        - sqs-daemon.service
        - upload.service
        - notification.service
    - name: Restart apache2
      service:
        name: apache2
        enabled: yes
        state: restarted
